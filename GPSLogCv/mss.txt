2001/03/20 mss.c v0.44 by masaaki@attglobal.net
gpslogcv.h内にcnvData_t構造体の定義があります。この構造体のポインター
を経由してinFileとoutFileの間でデータがやりとりできるしくみになってい
るようです。
今回は、上記構造体の中で
	char rcvStat;		/* reciever status, 0=N/A,1=Lost,2=2D,3=3D,4=DGPS */
	Satdat_t *satdatp;	/* pointer to satelite data, if null, no data */

が新に定義され、in_NME()などでインプットの際にデータが取り込まれるよう
にgpslogcv本体が改良されたので、その機能を使ってcircle=によるMapServerScript
表示を考えてみました（なお、読み込みに時間がかかることがあるので注意が
必要です）。
  gps2mss-MS128.exe
というように実行してください。DispPointsが指定されると、現在のところ他
のオプションは無視されます。
ただし、最大ポイント数は不明です。oid=が32bit整数として認識されるとの
ことなので、この範囲であれば大丈夫でしょう。
スレッド数は従来どおり。このスレッドの制限は外すよう書き直したいと思っ
てはいます。

2D測位やDGPSになっているところではcircleの色を変えると各種分析に使える
かもしれません。一応参考程度の実装をしてあります。
lineの場合でもそうですが、スピートによって色を変えるというのもいいかも
しれません。これについては、既にperlでスクリプト書いている方もいるよう
なので、そちらを参考にしてください。


Bug Fix:
１スレッド内で2000を超すポイントがあり、line=によりスクリプトを出力す
る場合、ポイントカウント数が1999となっていたバグ及びstart_time表示がお
かしいバグを修正。


2001/03/16 mss.c v0.43 rev1
tm構造体へのデータ受け渡しは、１５年以上前の知識しかなかったので、最初
は構造体の中の変数ごとにデータを受け渡ししていたんですが、スマートなや
り方があるんですね。gigoさんに添削していただきました。


2001/03/06 mss.c v0.43
mss.cは、gpslogcvにおいて、アルプス社Proatlas用 MapServerScriptファイ
ルを出力します。
もともとはgigo(imaizumi@nisiq.net)さんが書いたものを、私がちょこっと
だけ書き足したものです。

オプションの設定方法の基本型はgpslogcv.txtを参照ください。
指定方法は、
-MSopt opt[bit flag]
となっています。bit flagの詳細は、mss.cの中身を見ればすぐに分かると思
います。
/* MSS Options */
#define NoString       0x01 //0000 0001 = 1
#define CountPoints    0x02 //0000 0010 = 2
#define DispTime       0x04 //0000 0100 = 4
#define TextSizeSmall  0x08 //0000 1000 = 8
#define UniqueColorRed 0x40 //0100 0000 = 64
#define UniqueColorGr  0x50 //0101 0000 = 80
#define UniqueColorBl  0x60 //0110 0000 = 96
#define DispPoints     0x80 //1000 0000 =128

例： 
   gps2mss -MS1  //NoString
   gps2mss -MS2  //CountPoints
   gps2mss -MS65 //UniqueColorRed+NoString
opt部分に16進数を指定できるかは試していません。

NoStringが指定された場合は、info=にトラックログ名などを出力しています。
これにより、メインウィンドウにはテキストは表示されないのですが、
MapServerScript表示ウィンドウには、トラックログ名（ポイント数）が表示
できます。

MSSopt変数はint変数で定義されています。しかし8bitを超えるデータは受け
付けないようにチェックかけています。

最近は、PA2001DVD版でしか動作テストしていません。Mac版やwindows版の古
いものでうまく表示されるかは、不明です。
PAでは、ポイント数が2000（正確には？）を超えるとプログラムが落ちるよう
なので、１スレッドで2000を超える場合はラインを分割しています。

最大出力スレッド数（2000を超えた場合の強制分割含む）は、0xFFFF個です。
つまり256進数２桁ということです。
ただし、0.1からカウントするので、正確には0xFFFF-1個です。
gid=については1桁あたり0xFF(=255)までという仕様がある（実際は？）ので、
その仕様にそってgid=を構成するようにしています。

gpslogcv.c内でDAT_TIM及びDAT_JSTを定義した上で、トラックログの先頭及び
最終ポイントの時刻表示をinfo=に記述しています（出力側は日本時間決めう
ちです）。
cls_MSS()に新たにcnvData_t *GPSLogpを定義しようとしたら、うまくいかず、
gpslogcv.cをどういじって良いか考えつかなかったので、かなり適当なコード
となっています。


ToDo:
途中でスレッドが切れている場合、間をつなぐかどうかのオプション設定

MapSourceやPCX5などではGPSからのデータダウンロード時にトラックログ名が
付加されます。
しかし、inFileには必ずしもトラックログ名がない場合があります（例:TDF形式）
その場合は、ちょっとなさけないMapServerScriptが出力されるので（表示は
問題なし）、工夫が必要かなと感じています。

最終スレッドだけ、元のMapSource形式とポイント数が１つずれます（少ない）。
私の手持ちテスト用データでは
  MapSource v4 beta ---> PCX trk
への変換でもずれるので、現在のところ原因追求にいたらず。

関数方式ではなくプリプロセッサ方式の方が効率がいい？

linewidth=指定（雛形は出力されるのでエディターで書き換えれば済むことか？）
pointstyle=によるicon指定（雛形は出力されるのでエディターで書き換えれば済むことか？）
textstyle=指定（雛形は出力されるのでエディターで書き換えれば済むことか？）

gps2mssaとrenameして利用した際に、
  MapSource形式ファイル---> MapServerScript
ファイルへの変換ができないので、その場合は、
  filename.mps --->filename-pa.mps
とする機能を追加（標準出力機能があるので必要なし？）
 gps2mss -f filename.mps > filename-pa.mps
とするとよいです。
